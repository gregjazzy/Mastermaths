import { NextRequest, NextResponse } from 'next/server'
import { getServerSession } from 'next-auth'
import { authOptions } from '@/lib/auth'
import { PrismaClient } from '@prisma/client'
import { GoogleGenerativeAI } from '@google/generative-ai'

const prisma = new PrismaClient()
const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY || '')

export async function POST(request: NextRequest) {
  try {
    const session = await getServerSession(authOptions)

    if (!session || !session.user?.email) {
      return NextResponse.json({ error: 'Non authentifi√©' }, { status: 401 })
    }

    const user = await prisma.user.findUnique({
      where: { email: session.user.email },
    })

    if (!user) {
      return NextResponse.json({ error: 'Utilisateur introuvable' }, { status: 404 })
    }

    // V√©rifier l'√©ligibilit√© (similaire √† /eligibility)
    if (user.subscriptionType !== 'ANNUAL') {
      return NextResponse.json({ error: 'Abonnement annuel requis' }, { status: 403 })
    }

    if (user.subscriptionStartDate) {
      const daysSince = Math.floor(
        (Date.now() - new Date(user.subscriptionStartDate).getTime()) / (1000 * 60 * 60 * 24)
      )
      if (daysSince < 14) {
        return NextResponse.json({ error: 'P√©riode de r√©tractation en cours' }, { status: 403 })
      }
    }

    const { questionnaire } = await request.json()

    if (!questionnaire) {
      return NextResponse.json({ error: 'Questionnaire manquant' }, { status: 400 })
    }

    // ========== PASSAGE 1 : G√âN√âRATION DU BILAN COMPLET (5 SECTIONS) ==========

    const model = genAI.getGenerativeModel({ 
      model: 'models/gemini-pro',
      generationConfig: {
        maxOutputTokens: 8192,
        temperature: 0.7,
      }
    })

    const prompt1 = `üéØ MISSION : Vous √™tes un Conseiller d'Orientation P√©dagogique Expert.

Vous devez g√©n√©rer un Bilan P√©dagogique et d'Orientation sur Mesure complet, professionnel, et humain. Analysez de mani√®re critique les donn√©es fournies par l'√©l√®ve et ses parents (performance acad√©mique, soft skills, ambitions, contexte international) pour produire un document structur√© et actionnable.

üì• DONN√âES D'ENTR√âE :
${JSON.stringify(questionnaire, null, 2)}

üîç STRUCTURE DU BILAN REQUIS :

Le Bilan doit √™tre r√©dig√© de mani√®re claire, encourageante et nuanc√©e, en √©vitant le langage g√©n√©rique. Il doit √™tre s√©par√© en 5 sections principales :

**1. SYNTH√àSE DU PROFIL ET DE LA TRAJECTOIRE**

- Synth√®se G√©n√©rale : Pr√©senter l'√©l√®ve (√¢ge, genre, niveau) et r√©sumer les principales forces et les domaines de vigilance identifi√©s.
- Analyse de la Trajectoire : D√©crire la dynamique de performance (progression vs. d√©clin) en Premi√®re et Terminale. Analyser le classement en classe pour √©valuer la position relative de l'√©l√®ve.

**2. AD√âQUATION PERFORMANCE VS. AMBITION**

- Analyse de l'Alignement : √âvaluer de mani√®re critique la coh√©rence entre la performance acad√©mique (notes, classement, tests SAT/TOEIC) et le niveau d'ambition post-bac (Top 5, Top 15, Pr√©pa s√©lective, √âtranger).
- Bilan Linguistique et International : Valider l'ad√©quation du niveau de langues et des scores SAT/TOEFL avec les exigences des √©tudes √† l'√©tranger ou des fili√®res s√©lectives.
- Identification des √âcarts : Pointer, le cas √©ch√©ant, les mati√®res o√π un √©cart de niveau est le plus probl√©matique pour l'orientation souhait√©e.

**3. DIAGNOSTIC M√âTHODOLOGIQUE ET COMPORTEMENTAL**

- Habitudes de Travail : √âvaluer l'√©quilibre de la charge de travail (semaine/week-end) et le niveau d'autonomie. Proposer des pistes m√©thodologiques bas√©es sur le style d'apprentissage d√©clar√© (Visuel, Auditif, Kinesth√©sique).
- Soft Skills et Potentiel : Analyser les activit√©s extrascolaires (niveau d'excellence, leadership, pers√©v√©rance) pour identifier les comp√©tences transf√©rables et les valoriser dans la candidature (lettres de motivation, dossiers).

**4. RECOMMANDATIONS P√âDAGOGIQUES PRIORITAIRES**

- Proposer 3 √† 5 actions concr√®tes et imm√©diates pour consolider le dossier. Ces actions doivent √™tre sp√©cifiques (Ex: "Augmenter le temps de travail personnel en Math√©matiques de 2h/semaine", "Obtenir le niveau C1 en Anglais avant d√©cembre", "Structurer un projet personnel li√© √† l'activit√© X").
- Prioriser les mati√®res faibles qui menacent l'objectif d'orientation.

**5. SC√âNARIOS D'ORIENTATION (PLAN A, B, C)**

- Plan A (Id√©al) : Valider l'orientation la plus ambitieuse souhait√©e et lister les conditions imp√©ratives √† remplir.
- Plan B (S√©curit√©) : Proposer une fili√®re ou des √©tablissements l√©g√®rement moins s√©lectifs, mais parfaitement align√©s avec les int√©r√™ts de l'√©l√®ve, si le Plan A s'av√®re trop risqu√©.
- Conclusion : R√©diger une conclusion encourageante, centr√©e sur le potentiel et les prochaines √©tapes de la d√©marche d'orientation.

**FORMAT DE R√âPONSE :**
R√©digez un document complet en Markdown, structur√© avec des titres clairs (##, ###), des listes √† puces, et un ton professionnel mais bienveillant. Longueur cible : 1500-2000 mots.`

    const result1 = await model.generateContent(prompt1)
    const bilanInitial = result1.response.text()

    // ========== PASSAGE 2 : REVUE PSYCHOP√âDAGOGIQUE ==========

    const prompt2 = `üîç REVUE 1 - FILTRE PSYCHOP√âDAGOGIQUE (Soft Skills et Nuances)

Vous √™tes un psychop√©dagogue expert. Relisez le bilan suivant et AM√âLIOREZ-LE selon ces crit√®res :

**BILAN INITIAL √Ä AM√âLIORER :**
${bilanInitial}

**DONN√âES ORIGINALES (pour contexte) :**
${JSON.stringify(questionnaire, null, 2)}

**CRIT√àRES DE REVUE :**

1. **Ton et Motivation** : Est-ce que le langage est encourageant ? Les difficult√©s sont-elles pr√©sent√©es comme des d√©fis √† relever plut√¥t que des faiblesses insurmontables ?

2. **Valorisation du Non-Acad√©mique** : Les soft skills (leadership, rigueur, cr√©ativit√©) tir√©s des activit√©s extrascolaires sont-ils suffisamment mis en avant et connect√©s aux exigences de l'orientation souhait√©e ?

3. **Besoins Sp√©cifiques** : Les recommandations prennent-elles en compte le style d'apprentissage et les √©ventuels besoins sp√©cifiques (TDA/H, DYS) mentionn√©s ?

**INSTRUCTIONS :**
- Gardez la structure en 5 sections
- Am√©liorez le ton pour le rendre plus encourageant et personnalis√©
- Renforcez les liens entre soft skills et orientation
- Ajoutez de l'empathie sans perdre en professionnalisme
- Retournez le bilan COMPLET et AM√âLIOR√â en Markdown`

    const result2 = await model.generateContent(prompt2)
    const bilanRevuePsycho = result2.response.text()

    // ========== PASSAGE 3 : REVUE R√âALIT√â DU TERRAIN ==========

    const prompt3 = `üîç REVUE 2 - FILTRE R√âALIT√â DU TERRAIN / CONSEIL D'ADMISSION

Vous √™tes un conseiller d'admission universitaire avec 15 ans d'exp√©rience. Relisez le bilan suivant et AFFINEZ-LE selon ces crit√®res :

**BILAN APR√àS REVUE PSYCHOP√âDAGOGIQUE :**
${bilanRevuePsycho}

**DONN√âES ORIGINALES (pour contexte) :**
${JSON.stringify(questionnaire, null, 2)}

**CRIT√àRES DE REVUE :**

1. **Faisabilit√©** : Les recommandations et les sc√©narios d'orientation sont-ils r√©alistes et actualis√©s par rapport aux exigences r√©elles de Parcoursup ou des admissions internationales ?

2. **Coh√©rence des Chiffres** : La critique de l'alignement Performance/Ambition est-elle factuelle et bas√©e uniquement sur les donn√©es objectives (notes, rangs, scores SAT) ?

3. **Clart√© des Actions** : Les actions sont-elles sp√©cifiques, mesurables, atteignables, pertinentes et temporellement d√©finies (SMART) ?

**INSTRUCTIONS :**
- Gardez la structure en 5 sections
- Assurez-vous que TOUTES les recommandations sont concr√®tes et r√©alisables
- V√©rifiez que les Plans A/B/C sont r√©alistes compte tenu du profil
- Ajoutez des √©ch√©ances pr√©cises aux actions (Ex: "d'ici d√©cembre 2025")
- Retournez le bilan FINAL, COMPLET et OPTIMIS√â en Markdown`

    const result3 = await model.generateContent(prompt3)
    const bilanFinal = result3.response.text()

    // Le bilan final est le r√©sultat du triple passage
    const resultatHumanise = bilanFinal
    
    // Analyse simplifi√©e pour la colonne JSON (on garde une structure minimale)
    const analyse = {
      passagesEffectues: 3,
      syntheseRapide: "Bilan complet g√©n√©r√© avec triple validation (Initial + Psychop√©dagogique + R√©alit√© du Terrain)",
      timestamp: new Date().toISOString()
    }

    // ========== SAUVEGARDE EN BASE ==========

    const now = new Date()
    const expiresAt = new Date(now.getTime() + 365 * 24 * 60 * 60 * 1000) // +1 an

    const bilan = await prisma.orientationBilan.create({
      data: {
        userId: user.id,
        questionnaire: questionnaire as any,
        analyse: analyse as any,
        resultat: resultatHumanise,
        createdAt: now,
        expiresAt: expiresAt,
      },
    })

    return NextResponse.json({
      success: true,
      bilanId: bilan.id,
      message: 'Bilan g√©n√©r√© avec succ√®s',
    })
  } catch (error: any) {
    console.error('Erreur lors de la g√©n√©ration du bilan:', error)
    return NextResponse.json(
      { error: error.message || 'Erreur serveur lors de la g√©n√©ration' },
      { status: 500 }
    )
  }
}

